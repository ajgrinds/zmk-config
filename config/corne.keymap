/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        // Escape combo: Q + W

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        ctrl_t {
            bindings = <&kp LC(T)>;
            key-positions = <36 16>;
        };
    };

    behaviors {
        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        shift_d: shift_d {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_D";
            #binding-cells = <0>;
            bindings = <&hm LEFT_SHIFT D>, <&kp LS(D)>;

            tapping-term-ms = <100>;
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 4 3 5 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 6 7 8 9 10 11>;
            hold-trigger-on-release;
        };

        ctrl_f: ctrl_f {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_F";
            #binding-cells = <0>;
            bindings = <&hm LCTRL F>, <&kp LC(F)>;

            tapping-term-ms = <100>;
        };

        alt_s: alt_s {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_S";
            #binding-cells = <0>;
            bindings = <&hm LEFT_ALT S>, <&kp LA(S)>;

            tapping-term-ms = <100>;
        };

        win_a: win_a {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_A";
            #binding-cells = <0>;
            bindings = <&hm LEFT_GUI A>, <&kp LG(A)>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q           &kp W           &kp E             &kp R        &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P            &trans
&trans  &hm LEFT_WIN A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G        &kp H    &kp J      &kp K      &kp L    &lt 1 SEMICOLON  &trans
&trans  &lt 2 Z         &kp X           &kp C             &kp V        &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH         &trans
                                        &mo 2             &kp TAB      &kp SPACE    &kp RET  &bksp_del  &trans
            >;
        };

        Numbers_+_Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERCENT  &trans     &trans
&trans  &kp TILDE        &kp EQUAL      &kp LBKT        &kp RBKT              &kp BSLH                 &kp KP_NUMBER_4    &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp DOLLAR   &trans     &trans
&trans  &kp HASH         &kp PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE                 &kp KP_NUMBER_1    &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp GRAVE    &kp CARET  &trans
                                        &kp SQT         &kp MINUS             &kp UNDERSCORE           &kp DOUBLE_QUOTES  &kp KP_NUMBER_0  &kp AT
            >;
        };

        Functions {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &kp LS(LC(T))       &kp F9      &kp F10  &kp F11  &kp F12  &to 4          &trans
&trans  &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &trans              &kp F5      &kp F6   &kp F7   &kp F8   &kp RIGHT_ALT  &trans
&trans  &trans         &trans    &trans        &trans     &trans              &kp F1      &kp F2   &kp F3   &kp F4   &sys_reset     &trans
                                 &trans        &trans     &kp C_PLAY_PAUSE    &caps_word  &trans   &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Gaming {
            bindings = <
&trans          &kp Q   &kp W   &kp E   &trans            &trans       &trans  &trans  &trans  &trans  &trans  &to 0
&trans          &kp A   &kp S   &kp D   &kp F             &trans       &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans            &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &kp LEFT_CONTROL  &kp SPACE    &trans  &trans  &trans
            >;
        };
    };
};
